<script>
var map;
var infoWindow;
var icono = 'B-04-01.png'
var marker
var placeSearch, autocomplete, geocoder;
var heatmapStyle = [{ "featureType": "administrative", "elementType": "labels.text.fill", "stylers": [{ "color": "#444444" }] }, { "featureType": "landscape", "elementType": "all", "stylers": [{ "color": "#f2f2f2" }] }, { "featureType": "poi", "elementType": "all", "stylers": [{ "visibility": "off" }] }, { "featureType": "road", "elementType": "all", "stylers": [{ "saturation": -100 }, { "lightness": 45 }] }, { "featureType": "road.highway", "elementType": "all", "stylers": [{ "visibility": "simplified" }] }, { "featureType": "road.arterial", "elementType": "labels.icon", "stylers": [{ "visibility": "off" }] }, { "featureType": "transit", "elementType": "all", "stylers": [{ "visibility": "off" }] }, { "featureType": "water", "elementType": "all", "stylers": [{ "color": "#46bcec" }, { "visibility": "on" }] }]
var componentForm = {

  street_number: 'short_name',
  route: 'long_name',
  locality: 'long_name',
  administrative_area_level_1: 'long_name',
  administrative_area_level_3: 'short_name',
  country: 'long_name',
  postal_code: 'short_name'
};

function initMap() {
  map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 19.430091, lng: -99.171062},
      zoom: 15,
      disableDefaultUI: true,
      gestureHandling: 'greedy',
      styles: heatmapStyle
  });



  // Create autocomplete object
  autocomplete = new google.maps.places.Autocomplete(
       /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
      { types: ['geocode'] });

  // When the user selects an address from the dropdow, populate the address
  autocomplete.addListener('place_changed', acceptAutocomplete);

  geocoder = new google.maps.Geocoder;
}

function handleLocationError(browserHasGeolocation, pos) {
  infoWindow.setPosition(pos);
  infoWindow.setContent(browserHasGeolocation ?
      'Error: The Geolocation service failed.' :
      'Error: Your browser doesn\'t support geolocation.');
}

function useLocation() {
  if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function (position) {
          var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
          };

          setLocation(pos);
          geocodeLatLng(pos);

      }, function () {
          handleLocationError(true, map.getCenter());
      });

  } else {
      handleLocationError(false, map.getCenter());
  }
}

function setLocation(pos) {
  if (marker == null) {
      marker = new google.maps.Marker({
          map: map,
          draggable: true
          , animation: google.maps.Animation.DROP,
          position: pos
      });

      marker.addListener('dragend', didDragMarker);
  }

  marker.setPosition(pos);
  map.setCenter(pos);
  map.setZoom(16);
  document.getElementById('latbox').value = pos.lat();
  document.getElementById('lngbox').value = pos.lng();
}

function didDragMarker() {
  var pos = marker.getPosition();
  geocodeLatLng(pos);
}

function acceptAutocomplete() {
  var place = autocomplete.getPlace();
  setLocation(place.geometry.location);
  fillInAddress(place);
}

function fillInAddress(place)
{
  document.getElementById("autocomplete").value = place.formatted_address;
  for (var component in componentForm) {
      document.getElementById(component).value = "";
      document.getElementById(component).disabled = false;
  }

  // Get each component of the address from the place details
  // and fill the corresponding field on the form
  for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
          var val = place.address_components[i][componentForm[addressType]];
          document.getElementById(addressType).value = val;
      }
  }

  document.getElementById('#latbox').value = place.geometry.location.lat();
  document.getElementById('#lngbox').value = place.geometry.location.lng();
}
// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate() {
  if (navigator.geolocation) {
     navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = {
           lat: position.coords.latitude,
           lng: position.coords.longitude
        };
        var circle = new google.maps.Circle({
           center: geolocation,
           radius: position.coords.accuracy
        });
        autocomplete.setBounds(circle.getBounds());
     });
  }
}

function geocodeLatLng(latlng) {
  geocoder.geocode({'location': latlng}, function(results, status) {
     if (status === 'OK') {
        if (results[0]) {
           var place = results[0];

           fillInAddress(place);
        } else {
           window.alert('No results found');
        }
     } else {
        window.alert('Geocoder failed due to: ' + status);
     }
  });
}
</script>

<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD-5EwSqtyTKLN3K4DqsGuMrCLO_INJo1s&libraries=places&callback=initMap">
type="text/javascript" </script>
<%= render 'form_edit', negocio: @negocio %>

</section>

</body>
